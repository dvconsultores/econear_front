{"version":3,"sources":["webpack:///./node_modules/near-api-js/lib/account.js","webpack:///./node_modules/near-api-js/lib/key_stores/keystore.js","webpack:///./node_modules/near-api-js/lib/account_multisig.js","webpack:///./node_modules/near-api-js/lib/wallet-account.js","webpack:///./node_modules/near-api-js/lib/providers/index.js","webpack:///./node_modules/near-api-js/lib/utils/format.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/near-api-js/lib/connection.js","webpack:///./node_modules/near-api-js/lib/utils/enums.js","webpack:///./node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js","webpack:///./node_modules/near-api-js/lib/utils/key_pair.js","webpack:///./node_modules/js-sha256/src/sha256.js","webpack:///./node_modules/near-api-js/lib/key_stores/in_memory_key_store.js","webpack:///./node_modules/near-api-js/lib/utils/serialize.js","webpack:///./node_modules/near-api-js/lib/utils/web.js","webpack:///./node_modules/near-api-js/lib/utils/errors.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/near-api-js/lib/utils/exponential-backoff.js","webpack:///./node_modules/near-api-js/lib/signer.js","webpack:///./node_modules/near-api-js/lib/key_stores/merge_key_store.js","webpack:///./node_modules/mustache/mustache.js","webpack:///./node_modules/near-api-js/lib/common-index.js","webpack:///./node_modules/near-api-js/lib/account_creator.js","webpack:///./node_modules/near-api-js/lib/utils/index.js","webpack:///./node_modules/near-api-js/lib/providers/json-rpc-provider.js","webpack:///./node_modules/near-api-js/lib/transaction.js","webpack:///./node_modules/near-api-js/lib/constants.js","webpack:///./node_modules/near-api-js/lib/utils/rpc_errors.js","webpack:///./node_modules/near-api-js/lib/contract.js","webpack:///./node_modules/near-api-js/lib/key_stores/browser-index.js","webpack:///./node_modules/near-api-js/lib/providers/provider.js","webpack:///./node_modules/near-api-js/lib/browser-index.js","webpack:///./node_modules/near-api-js/lib/browser-connect.js","webpack:///./node_modules/near-api-js/lib/validators.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/near-api-js/lib/near.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Account","bn_js_1","depd_1","transaction_1","providers_1","borsh_1","key_pair_1","errors_1","rpc_errors_1","constants_1","exponential_backoff_1","TX_NONCE_RETRY_NUMBER","TX_NONCE_RETRY_WAIT","TX_NONCE_RETRY_WAIT_BACKOFF","parseJsonFromRawResponse","response","JSON","parse","Buffer","from","toString","bytesJsonStringify","input","stringify","connection","accountId","accessKeyByPublicKeyCache","deprecate","default","Promise","resolve","provider","query","request_type","account_id","finality","contractId","results","result","console","log","receiptIds","length","join","printLogs","logs","failure","warn","prefix","receiverId","actions","accessKeyInfo","findAccessKey","TypedError","networkId","signer","accessKey","block","blockHash","header","hash","nonce","signTransaction","baseDecode","args","signAndSendTransactionV1","signAndSendTransactionV2","returnError","txHash","signedTx","async","publicKey","transaction","sendTransaction","error","type","logWarning","baseEncode","context","ErrorContext","flatLogs","transaction_outcome","receipts_outcome","reduce","acc","it","outcome","status","Failure","concat","receipt_ids","parseRpcError","printLogsAndFailures","error_message","error_type","id","parseResultError","getPublicKey","cachedAccessKey","undefined","public_key","e","data","amount","fullAccessKey","signAndSendTransaction","createAccount","transfer","addKey","PublicKey","deployContract","contractAccount","newAccountId","beneficiaryId","deleteAccount","functionCallV1","functionCallV2","methodName","gas","validateArgs","functionCall","DEFAULT_FUNCTION_CALL_GAS","attachedDeposit","walletMeta","walletCallbackUrl","stringifyArg","stringifyJsonOrBytes","methodNames","Array","isArray","functionCallAccessKey","deleteKey","stake","isUint8Array","byteLength","PositionalArgsError","serializedArgs","method_name","args_base64","blockQuery","values","prefix_base64","map","key","keys","accessKeys","getAccessKeys","authorizedApps","filter","item","access_key","permission","perm","FunctionCall","receiver_id","allowance","protocolConfig","experimental_protocolConfig","state","costPerByte","runtime_config","storage_amount_per_byte","stateStaked","storage_usage","mul","staked","locked","totalBalance","add","availableBalance","sub","max","total","available","KeyStore","Account2FA","AccountMultisig","MULTISIG_CONFIRM_METHODS","MULTISIG_CHANGE_METHODS","MULTISIG_DEPOSIT","MULTISIG_GAS","MULTISIG_ALLOWANCE","MULTISIG_STORAGE_KEY","account_1","format_1","web_1","parseNearAmount","storageFallback","options","super","storage","onAddRequestResult","_signAndSendTransaction","request","convertActions","includes","deleteUnconfirmedRequests","Error","SuccessValue","setRequest","requestId","parseInt","request_ids","getRequestIds","getRequest","requestIdToDelete","request_id","viewFunction","getItem","setItem","helperUrl","sendCode","sendCodeDefault","getCode","getCodeDefault","verifyCode","verifyCodeDefault","onConfirmResult","__signAndSendTransaction","promptAndVerify","contractBytes","seedOrLedgerKey","getRecoveryMethods","kind","rm","fak2lak","ak","toPK","confirmOnlyKey","postSignedJson","newArgs","pk","code_hash","push","signAndSendTransactionWithAccount","lak2fak","method_names","method","get2faMethod","securityCode","find","m","indexOf","detail","blockNumber","height","signed","signMessage","blockNumberSignature","signature","path","body","fetchJson","signatureFor","convertPKForContract","replace","a","enum","deposit","code","action","toUpperCase","substr","ConnectedWalletAccount","WalletAccount","WalletConnection","utils_1","borsh_2","LOGIN_WALLET_URL_SUFFIX","MULTISIG_HAS_METHOD","LOCAL_STORAGE_KEY_SUFFIX","PENDING_ACCESS_KEY_PREFIX","near","appKeyPrefix","_near","authDataKey","authData","window","localStorage","_networkId","config","_walletBaseUrl","walletUrl","contractName","_keyStore","keyStore","_authData","allKeys","_authDataKey","isSignedIn","_completeSignInWithAccessKey","contractIdOrOptions","title","successUrl","failureUrl","currentUrl","URL","location","href","newUrl","searchParams","set","account","KeyPair","fromRandom","setKey","forEach","append","assign","_requestSignTransactions","transactions","callbackUrl","meta","serialize","SCHEMA","serialized","get","split","_moveKeyFromTempToPermanent","delete","history","replaceState","document","keyPair","getKey","removeKey","removeItem","_connectedAccount","walletConnection","localKey","accessKeyForTransaction","createTransaction","requestSignTransactions","reject","setTimeout","allowedReceiverId","allowedMethods","accessKeyMatchesTransaction","walletKeys","getTransactionLastResult","FinalExecutionStatusBasic","JsonRpcProvider","Provider","provider_1","enumerable","json_rpc_provider_1","formatNearAmount","NEAR_NOMINATION","NEAR_NOMINATION_EXP","pow","ROUNDING_OFFSETS","BN10","i","offset","balance","fracDigits","balanceBN","roundingExp","iadd","wholeStr","substring","fractionStr","padStart","trimTrailingZeroes","formatWithCommas","amt","cleanupAmount","wholePart","fracPart","trimLeadingZeroes","padEnd","trim","pattern","test","create","module","ctor","superCtor","super_","prototype","constructor","writable","configurable","TempCtor","nextTick","fn","slice","call","arguments","shift","apply","platform","arch","execPath","pid","browser","env","argv","binding","name","cwd","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","Connection","signer_1","getProvider","getSigner","InMemorySigner","Assignable","Enum","properties","BrowserLocalStorageKeyStore","keystore_1","LOCAL_STORAGE_KEY_PREFIX","storageKeyForSecretKey","fromString","storageKeys","startsWith","Set","parts","KeyPairEd25519","KeyType","tweetnacl_1","serialize_1","enums_1","key_type_to_str","keyType","ED25519","str_to_key_type","toLowerCase","encodedKey","base_decode","base_encode","message","sign","detached","verify","curve","secretKey","fromSecretKey","newKeyPair","ERROR","WINDOW","root","JS_SHA256_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_SHA256_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA256_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","EXTRA","SHIFT","K","OUTPUT_TYPES","blocks","obj","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","is224","Sha256","update","createMethod","nodeWrap","crypto","eval","algorithm","nodeMethod","createHash","digest","Uint8Array","createHmacOutputMethod","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","start","bytes","hBytes","finalized","hashed","first","index","charCodeAt","array","oKeyPad","iKeyPad","b","inner","notString","lastByteIndex","finalize","j","s0","s1","maj","t1","t2","ch","ab","da","cd","bc","c","d","f","g","h","hex","arr","arrayBuffer","dataView","DataView","setUint32","innerHash","sha256","sha224","hmac","InMemoryKeyStore","deserialize","BorshError","BinaryWriter","BinaryReader","http_errors_1","START_WAIT_TIME_MS","BACKOFF_MULTIPLIER","RETRY_NUMBER","connectionInfoOrUrl","json","connectionInfo","url","fetch","headers","ok","text","ArgumentTypeError","argName","argType","argValue","transactionHash","read","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","Infinity","Math","write","rt","abs","isNaN","floor","LN2","exponentialBackoff","startWaitTime","retryNumber","waitBackoff","getResult","waitTime","sleep","millis","Signer","js_sha256_1","in_memory_key_store_1","MergeKeyStore","keyStores","writeKeyStoreIndex","clear","network","getNetworks","getAccounts","factory","objectToString","object","isFunction","typeStr","escapeRegExp","string","hasProperty","propName","primitiveHasOwnProperty","primitive","hasOwnProperty","regExpTest","RegExp","testRegExp","re","nonSpaceRe","isWhitespace","entityMap","escapeHtml","String","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","parseTemplate","template","tags","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","tokens","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","mustache","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","charAt","scan","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","view","parentContext","cache","parent","Writer","templateCache","_cache","match","search","lookup","intermediateValue","names","lookupHit","clearCache","cacheKey","isCacheEnabled","render","partials","getConfigTags","renderTokens","originalTemplate","symbol","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","getConfigEscape","version","defaultWriter","TypeError","__createBinding","o","k","k2","__setModuleDefault","v","__importStar","Near","Contract","multisig","validators","utils","providers","accountCreator","connection_1","contract_1","near_1","wallet_account_1","UrlAccountCreator","LocalAccountCreator","AccountCreator","masterAccount","initialBalance","newAccountPublicKey","rpc_errors","format","enums","web","key_pair","REQUEST_RETRY_NUMBER","REQUEST_RETRY_WAIT","REQUEST_RETRY_WAIT_BACKOFF","_nextId","sendJsonRpc","signedTransaction","encode","txStatusString","txStatusUint8Array","getErrorTypeFromErrorMessage","blockId","block_id","chunkId","sync_checkpoint","blockReference","lightClientProof","accountIdArray","changes_type","account_ids","accessKeyArray","keyPrefix","key_prefix_base64","params","jsonrpc","errorMessage","Action","SignedTransaction","Transaction","Signature","DeleteAccount","DeleteKey","AddKey","Stake","Transfer","DeployContract","CreateAccount","IAction","AccessKey","AccessKeyPermission","FullAccessPermission","FunctionCallPermission","fullAccess","signerId","signTransactionObject","Map","fields","field","formatError","ServerError","mustache_1","rpc_error_schema_json_1","error_messages_json_1","common_index_1","mustacheHelpers","formatNear","n","ServerTransactionError","errorObj","errorClassName","walkSubtype","schema","server_error","server_tx_error","errorData","typeName","errorTypeName","errorName","isString","isObject","prop","props","nameFunction","x","viewMethods","changeMethods","ignored","_changeMethod","validateBNLike","rawResult","argMap","bnLike","isBN","browser_local_storage_key_store_1","merge_key_store_1","IdType","ExecutionStatusBasic","txResult","__exportStar","p","connect","diffEpochValidators","findSeatPrice","maxNumberOfSeats","minimumStakeRatio","protocolVersion","findSeatPriceForProtocolBefore49","findSeatPriceForProtocolAfter49","numSeats","stakes","sort","cmp","num","stakesSum","lt","left","right","eq","mid","div","found","currentSum","gte","currentValidators","nextValidators","validatorsMap","nextValidatorsSet","newValidators","has","removedValidators","changedValidators","current","next","account_creator_1","fromConfig","nodeUrl","deps","sender","originator","receiver","sendMoney"],"mappings":"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","file":"js/chunk-vendors~7d359b94.3cc7821c.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst transaction_1 = require(\"./transaction\");\nconst providers_1 = require(\"./providers\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst errors_1 = require(\"./utils/errors\");\nconst rpc_errors_1 = require(\"./utils/rpc_errors\");\nconst constants_1 = require(\"./constants\");\nconst exponential_backoff_1 = __importDefault(require(\"./utils/exponential-backoff\"));\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link KeyPair}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n * @hint Use {@link WalletConnection} in the browser to redirect to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for Account/key management using the {@link BrowserLocalStorageKeyStore}.\n * @see {@link https://nomicon.io/DataStructures/Account.html | Account Spec}\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    /** @hidden */\n    get ready() {\n        const deprecate = depd_1.default('Account.ready()');\n        deprecate('not needed anymore, always ready');\n        return Promise.resolve();\n    }\n    async fetchState() {\n        const deprecate = depd_1.default('Account.fetchState()');\n        deprecate('use `Account.state()` instead');\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-account}\n     */\n    async state() {\n        return this.connection.provider.query({\n            request_type: 'view_account',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n    }\n    /** @hidden */\n    printLogsAndFailures(contractId, results) {\n        if (!process.env[\"NEAR_NO_LOGS\"]) {\n            for (const result of results) {\n                console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n                this.printLogs(contractId, result.logs, '\\t');\n                if (result.failure) {\n                    console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n                }\n            }\n        }\n    }\n    /** @hidden */\n    printLogs(contractId, logs, prefix = '') {\n        if (!process.env[\"NEAR_NO_LOGS\"]) {\n            for (const log of logs) {\n                console.log(`${prefix}Log [${contractId}]: ${log}`);\n            }\n        }\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link JsonRpcProvider.sendTransaction}\n     */\n    async signTransaction(receiverId, actions) {\n        const accessKeyInfo = await this.findAccessKey(receiverId, actions);\n        if (!accessKeyInfo) {\n            throw new providers_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n        }\n        const { accessKey } = accessKeyInfo;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const nonce = ++accessKey.nonce;\n        return await transaction_1.signTransaction(receiverId, nonce, actions, borsh_1.baseDecode(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this.signAndSendTransactionV1(args[0], args[1]);\n        }\n        else {\n            return this.signAndSendTransactionV2(args[0]);\n        }\n    }\n    signAndSendTransactionV1(receiverId, actions) {\n        const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n        deprecate('use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n        return this.signAndSendTransactionV2({ receiverId, actions });\n    }\n    async signAndSendTransactionV2({ receiverId, actions, returnError }) {\n        let txHash, signedTx;\n        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n        const result = await exponential_backoff_1.default(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, async () => {\n            [txHash, signedTx] = await this.signTransaction(receiverId, actions);\n            const publicKey = signedTx.transaction.publicKey;\n            try {\n                return await this.connection.provider.sendTransaction(signedTx);\n            }\n            catch (error) {\n                if (error.type === 'InvalidNonce') {\n                    errors_1.logWarning(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} with new nonce.`);\n                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                    return null;\n                }\n                if (error.type === 'Expired') {\n                    errors_1.logWarning(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} due to expired block hash`);\n                    return null;\n                }\n                error.context = new providers_1.ErrorContext(borsh_1.baseEncode(txHash));\n                throw error;\n            }\n        });\n        if (!result) {\n            // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n            throw new providers_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n        }\n        const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n            if (it.outcome.logs.length ||\n                (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                return acc.concat({\n                    'receiptIds': it.outcome.receipt_ids,\n                    'logs': it.outcome.logs,\n                    'failure': typeof it.outcome.status.Failure != 'undefined' ? rpc_errors_1.parseRpcError(it.outcome.status.Failure) : null\n                });\n            }\n            else\n                return acc;\n        }, []);\n        this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n        if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n            if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                throw new providers_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n            }\n            else {\n                throw rpc_errors_1.parseResultError(result);\n            }\n        }\n        // TODO: if Tx is Unknown or Started.\n        return result;\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link KeyStore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    async findAccessKey(receiverId, actions) {\n        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        if (!publicKey) {\n            return null;\n        }\n        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n        if (cachedAccessKey !== undefined) {\n            return { publicKey, accessKey: cachedAccessKey };\n        }\n        try {\n            const accessKey = await this.connection.provider.query({\n                request_type: 'view_access_key',\n                account_id: this.accountId,\n                public_key: publicKey.toString(),\n                finality: 'optimistic'\n            });\n            // this function can be called multiple times and retrieve the same access key\n            // this checks to see if the access key was already retrieved and cached while\n            // the above network call was in flight. To keep nonce values in line, we return\n            // the cached access key.\n            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n            }\n            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n            return { publicKey, accessKey };\n        }\n        catch (e) {\n            if (e.type == 'AccessKeyDoesNotExist') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    async createAndDeployContract(contractId, publicKey, data, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        await this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey), transaction_1.deployContract(data)]\n        });\n        const contractAccount = new Account(this.connection, contractId);\n        return contractAccount;\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    async sendMoney(receiverId, amount) {\n        return this.signAndSendTransaction({\n            receiverId,\n            actions: [transaction_1.transfer(amount)]\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    async createAccount(newAccountId, publicKey, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        return this.signAndSendTransaction({\n            receiverId: newAccountId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    async deleteAccount(beneficiaryId) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteAccount(beneficiaryId)]\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    async deployContract(data) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deployContract(data)]\n        });\n    }\n    async functionCall(...args) {\n        if (typeof args[0] === 'string') {\n            return this.functionCallV1(args[0], args[1], args[2], args[3], args[4]);\n        }\n        else {\n            return this.functionCallV2(args[0]);\n        }\n    }\n    functionCallV1(contractId, methodName, args, gas, amount) {\n        const deprecate = depd_1.default('Account.functionCall(contractId, methodName, args, gas, amount)');\n        deprecate('use `Account.functionCall(FunctionCallOptions)` instead');\n        args = args || {};\n        this.validateArgs(args);\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas || constants_1.DEFAULT_FUNCTION_CALL_GAS, amount)]\n        });\n    }\n    functionCallV2({ contractId, methodName, args = {}, gas = constants_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify }) {\n        this.validateArgs(args);\n        const stringifyArg = stringify === undefined ? transaction_1.stringifyJsonOrBytes : stringify;\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas, attachedDeposit, stringifyArg)],\n            walletMeta,\n            walletCallbackUrl\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/concepts/account#access-keys}\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    async addKey(publicKey, contractId, methodNames, amount) {\n        if (!methodNames) {\n            methodNames = [];\n        }\n        if (!Array.isArray(methodNames)) {\n            methodNames = [methodNames];\n        }\n        let accessKey;\n        if (!contractId) {\n            accessKey = transaction_1.fullAccessKey();\n        }\n        else {\n            accessKey = transaction_1.functionCallAccessKey(contractId, methodNames, amount);\n        }\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async deleteKey(publicKey) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteKey(key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/validator/staking-overview}\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    async stake(publicKey, amount) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.stake(amount, key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new errors_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#call-a-contract-function}\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @returns {Promise<any>}\n     */\n    async viewFunction(contractId, methodName, args = {}, { parse = parseJsonFromRawResponse, stringify = bytesJsonStringify } = {}) {\n        this.validateArgs(args);\n        const serializedArgs = stringify(args).toString('base64');\n        const result = await this.connection.provider.query({\n            request_type: 'call_function',\n            account_id: contractId,\n            method_name: methodName,\n            args_base64: serializedArgs,\n            finality: 'optimistic'\n        });\n        if (result.logs) {\n            this.printLogs(contractId, result.logs);\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-contract-state}\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    async viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        const { values } = await this.connection.provider.query({\n            request_type: 'view_state',\n            ...blockQuery,\n            account_id: this.accountId,\n            prefix_base64: Buffer.from(prefix).toString('base64')\n        });\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    }\n    /**\n     * Get all access keys for the account\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-access-key-list}\n     */\n    async getAccessKeys() {\n        const response = await this.connection.provider.query({\n            request_type: 'view_access_key_list',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n        // A breaking API change introduced extra information into the\n        // response, so it now returns an object with a `keys` field instead\n        // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n        if (Array.isArray(response)) {\n            return response;\n        }\n        return response.keys;\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    async getAccountDetails() {\n        // TODO: update the response value to return all the different keys, not just app keys.\n        // Also if we need this function, or getAccessKeys is good enough.\n        const accessKeys = await this.getAccessKeys();\n        const authorizedApps = accessKeys\n            .filter(item => item.access_key.permission !== 'FullAccess')\n            .map(item => {\n            const perm = item.access_key.permission;\n            return {\n                contractId: perm.FunctionCall.receiver_id,\n                amount: perm.FunctionCall.allowance,\n                publicKey: item.public_key,\n            };\n        });\n        return { authorizedApps };\n    }\n    /**\n     * Returns calculated account balance\n     */\n    async getAccountBalance() {\n        const protocolConfig = await this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n        const state = await this.state();\n        const costPerByte = new bn_js_1.default(protocolConfig.runtime_config.storage_amount_per_byte);\n        const stateStaked = new bn_js_1.default(state.storage_usage).mul(costPerByte);\n        const staked = new bn_js_1.default(state.locked);\n        const totalBalance = new bn_js_1.default(state.amount).add(staked);\n        const availableBalance = totalBalance.sub(bn_js_1.default.max(staked, stateStaked));\n        return {\n            total: totalBalance.toString(),\n            stateStaked: stateStaked.toString(),\n            staked: staked.toString(),\n            available: availableBalance.toString()\n        };\n    }\n}\nexports.Account = Account;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link Near} via {@link NearConfig}\n * and are used by the {@link InMemorySigner} to sign transactions.\n *\n * @example {@link connect}\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n","'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account2FA = exports.AccountMultisig = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst format_1 = require(\"./utils/format\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst transaction_1 = require(\"./transaction\");\nconst web_1 = require(\"./utils/web\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = new bn_js_1.default(format_1.parseNearAmount('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = new bn_js_1.default('100000000000000');\nexports.MULTISIG_DEPOSIT = new bn_js_1.default('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [exports.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    async signAndSendTransactionWithAccount(receiverId, actions) {\n        return super.signAndSendTransaction({ receiverId, actions });\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions }) {\n        const { accountId } = this;\n        const args = Buffer.from(JSON.stringify({\n            request: {\n                receiver_id: receiverId,\n                actions: convertActions(actions, accountId, receiverId)\n            }\n        }));\n        let result;\n        try {\n            result = await super.signAndSendTransaction({\n                receiverId: accountId,\n                actions: [\n                    transaction_1.functionCall('add_request_and_confirm', args, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)\n                ]\n            });\n        }\n        catch (e) {\n            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                await this.deleteUnconfirmedRequests();\n                return await this.signAndSendTransaction(receiverId, actions);\n            }\n            throw e;\n        }\n        // TODO: Are following even needed? Seems like it throws on error already\n        if (!result.status) {\n            throw new Error('Request failed');\n        }\n        const status = { ...result.status };\n        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n            throw new Error('Request failed');\n        }\n        this.setRequest({\n            accountId,\n            actions,\n            requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n        });\n        if (this.onAddRequestResult) {\n            await this.onAddRequestResult(result);\n        }\n        // NOTE there is no await on purpose to avoid blocking for 2fa\n        this.deleteUnconfirmedRequests();\n        return result;\n    }\n    async deleteUnconfirmedRequests() {\n        // TODO: Delete in batch, don't delete unexpired\n        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n        const request_ids = await this.getRequestIds();\n        const { requestId } = this.getRequest();\n        for (const requestIdToDelete of request_ids) {\n            if (requestIdToDelete == requestId) {\n                continue;\n            }\n            try {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId,\n                    actions: [transaction_1.functionCall('delete_request', { request_id: requestIdToDelete }, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)]\n                });\n            }\n            catch (e) {\n                console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n            }\n        }\n    }\n    // helpers\n    async getRequestIds() {\n        // TODO: Read requests from state to allow filtering by expiration time\n        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n        return this.viewFunction(this.accountId, 'list_request_ids');\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(exports.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[exports.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(exports.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[exports.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nclass Account2FA extends AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    async signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n            deprecate('use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n            return this.__signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        else {\n            return this.__signAndSendTransaction(args[0]);\n        }\n    }\n    async __signAndSendTransaction({ receiverId, actions }) {\n        await super.signAndSendTransaction({ receiverId, actions });\n        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n        await this.sendCode();\n        const result = await this.promptAndVerify();\n        if (this.onConfirmResult) {\n            await this.onConfirmResult(result);\n        }\n        return result;\n    }\n    // default helpers for CH deployments of multisig\n    async deployMultisig(contractBytes) {\n        const { accountId } = this;\n        const seedOrLedgerKey = (await this.getRecoveryMethods()).data\n            .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n            .map((rm) => rm.publicKey);\n        const fak2lak = (await this.getAccessKeys())\n            .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n            .map((ak) => ak.public_key)\n            .map(toPK);\n        const confirmOnlyKey = toPK((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n        const actions = [\n            ...fak2lak.map((pk) => transaction_1.deleteKey(pk)),\n            ...fak2lak.map((pk) => transaction_1.addKey(pk, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CHANGE_METHODS, null))),\n            transaction_1.addKey(confirmOnlyKey, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CONFIRM_METHODS, null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        if ((await this.state()).code_hash === '11111111111111111111111111111111') {\n            actions.push(transaction_1.functionCall('new', newArgs, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT));\n        }\n        console.log('deploying multisig contract for', accountId);\n        return await super.signAndSendTransactionWithAccount(accountId, actions);\n    }\n    async disable(contractBytes) {\n        const { accountId } = this;\n        const accessKeys = await this.getAccessKeys();\n        const lak2fak = accessKeys\n            .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n            .filter(({ access_key }) => {\n            const perm = access_key.permission.FunctionCall;\n            return perm.receiver_id === accountId &&\n                perm.method_names.length === 4 &&\n                perm.method_names.includes('add_request_and_confirm');\n        });\n        const confirmOnlyKey = key_pair_1.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const actions = [\n            transaction_1.deleteKey(confirmOnlyKey),\n            ...lak2fak.map(({ public_key }) => transaction_1.deleteKey(key_pair_1.PublicKey.from(public_key))),\n            ...lak2fak.map(({ public_key }) => transaction_1.addKey(key_pair_1.PublicKey.from(public_key), null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        console.log('disabling 2fa for', accountId);\n        return await this.signAndSendTransaction({\n            receiverId: accountId,\n            actions\n        });\n    }\n    async sendCodeDefault() {\n        const { accountId } = this;\n        const { requestId } = this.getRequest();\n        const method = await this.get2faMethod();\n        await this.postSignedJson('/2fa/send', {\n            accountId,\n            method,\n            requestId,\n        });\n        return requestId;\n    }\n    async getCodeDefault(method) {\n        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n    }\n    async promptAndVerify() {\n        const method = await this.get2faMethod();\n        const securityCode = await this.getCode(method);\n        try {\n            const result = await this.verifyCode(securityCode);\n            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n            return result;\n        }\n        catch (e) {\n            console.warn('Error validating security code:', e);\n            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                return await this.promptAndVerify();\n            }\n            throw e;\n        }\n    }\n    async verifyCodeDefault(securityCode) {\n        const { accountId } = this;\n        const request = this.getRequest();\n        if (!request) {\n            throw new Error('no request pending');\n        }\n        const { requestId } = request;\n        return await this.postSignedJson('/2fa/verify', {\n            accountId,\n            securityCode,\n            requestId\n        });\n    }\n    async getRecoveryMethods() {\n        const { accountId } = this;\n        return {\n            accountId,\n            data: await this.postSignedJson('/account/recoveryMethods', { accountId })\n        };\n    }\n    async get2faMethod() {\n        let { data } = await this.getRecoveryMethods();\n        if (data && data.length) {\n            data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n        }\n        if (!data)\n            return null;\n        const { kind, detail } = data;\n        return { kind, detail };\n    }\n    async signatureFor() {\n        const { accountId } = this;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockNumber = block.header.height.toString();\n        const signed = await this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n        const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n        return { blockNumber, blockNumberSignature };\n    }\n    async postSignedJson(path, body) {\n        return await web_1.fetchJson(this.helperUrl + path, JSON.stringify({\n            ...body,\n            ...(await this.signatureFor())\n        }));\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => key_pair_1.PublicKey.from(pk);\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: exports.MULTISIG_ALLOWANCE.toString(),\n                method_names: exports.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectedWalletAccount = exports.WalletAccount = exports.WalletConnection = void 0;\n/**\n * The classes in this module are used in conjunction with the {@link BrowserLocalStorageKeyStore}. This module exposes two classes:\n * * {@link WalletConnection} which redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.\n * * {@link ConnectedWalletAccount} is an {@link Account} implementation that uses {@link WalletConnection} to get keys\n *\n * @module walletAccount\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst transaction_1 = require(\"./transaction\");\nconst utils_1 = require(\"./utils\");\nconst borsh_1 = require(\"borsh\");\nconst borsh_2 = require(\"borsh\");\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\n/**\n * This class is used in conjunction with the {@link BrowserLocalStorageKeyStore}.\n * It redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#wallet}\n * @example\n * ```js\n * // create new WalletConnection instance\n * const wallet = new WalletConnection(near, 'my-app');\n *\n * // If not signed in redirect to the NEAR wallet to sign in\n * // keys will be stored in the BrowserLocalStorageKeyStore\n * if(!wallet.isSingnedIn()) return wallet.requestSignIn()\n * ```\n */\nclass WalletConnection {\n    constructor(near, appKeyPrefix) {\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletAccount is authorized with the wallet.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn();\n     * ```\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.getAccountId();\n     * ```\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // redirects to the NEAR Wallet\n     * wallet.requestSignIn({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    async requestSignIn(contractIdOrOptions = {}, title, successUrl, failureUrl) {\n        let options;\n        if (typeof contractIdOrOptions === 'string') {\n            const deprecate = depd_1.default('requestSignIn(contractId, title)');\n            deprecate('`title` ignored; use `requestSignIn({ contractId, methodNames, successUrl, failureUrl })` instead');\n            options = { contractId: contractIdOrOptions, successUrl, failureUrl };\n        }\n        else {\n            options = contractIdOrOptions;\n        }\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n        newUrl.searchParams.set('success_url', options.successUrl || currentUrl.href);\n        newUrl.searchParams.set('failure_url', options.failureUrl || currentUrl.href);\n        if (options.contractId) {\n            /* Throws exception if contract account does not exist */\n            const contractAccount = await this._near.account(options.contractId);\n            await contractAccount.state();\n            newUrl.searchParams.set('contract_id', options.contractId);\n            const accessKey = utils_1.KeyPair.fromRandom('ed25519');\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            await this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n        }\n        if (options.methodNames) {\n            options.methodNames.forEach(methodName => {\n                newUrl.searchParams.append('methodNames', methodName);\n            });\n        }\n        window.location.assign(newUrl.toString());\n    }\n    async requestSignTransactions(...args) {\n        if (Array.isArray(args[0])) {\n            const deprecate = depd_1.default('WalletConnection.requestSignTransactions(transactions, callbackUrl, meta)');\n            deprecate('use `WalletConnection.requestSignTransactions(RequestSignTransactionsOptions)` instead');\n            return this._requestSignTransactions({\n                transactions: args[0],\n                callbackUrl: args[1],\n                meta: args[2]\n            });\n        }\n        return this._requestSignTransactions(args[0]);\n    }\n    async _requestSignTransactions({ transactions, meta, callbackUrl }) {\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL('sign', this._walletBaseUrl);\n        newUrl.searchParams.set('transactions', transactions\n            .map(transaction => borsh_2.serialize(transaction_1.SCHEMA, transaction))\n            .map(serialized => Buffer.from(serialized).toString('base64'))\n            .join(','));\n        newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n        if (meta)\n            newUrl.searchParams.set('meta', meta);\n        window.location.assign(newUrl.toString());\n    }\n    /**\n     * @hidden\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    async _completeSignInWithAccessKey() {\n        const currentUrl = new URL(window.location.href);\n        const publicKey = currentUrl.searchParams.get('public_key') || '';\n        const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n        const accountId = currentUrl.searchParams.get('account_id') || '';\n        // TODO: Handle errors during login\n        if (accountId) {\n            this._authData = {\n                accountId,\n                allKeys\n            };\n            window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n            if (publicKey) {\n                await this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n        }\n        currentUrl.searchParams.delete('public_key');\n        currentUrl.searchParams.delete('all_keys');\n        currentUrl.searchParams.delete('account_id');\n        currentUrl.searchParams.delete('meta');\n        currentUrl.searchParams.delete('transactionHashes');\n        window.history.replaceState({}, document.title, currentUrl.toString());\n    }\n    /**\n     * @hidden\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    async _moveKeyFromTempToPermanent(accountId, publicKey) {\n        const keyPair = await this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        await this._keyStore.setKey(this._networkId, accountId, keyPair);\n        await this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexports.WalletConnection = WalletConnection;\nexports.WalletAccount = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using {@link WalletConnection} when no local key is available.\n */\nclass ConnectedWalletAccount extends account_1.Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    /**\n     * Sign a transaction by redirecting to the NEAR Wallet\n     * @see {@link WalletConnection.requestSignTransactions}\n     */\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions, walletMeta, walletCallbackUrl = window.location.href }) {\n        const localKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        let accessKey = await this.accessKeyForTransaction(receiverId, actions, localKey);\n        if (!accessKey) {\n            throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n        }\n        if (localKey && localKey.toString() === accessKey.public_key) {\n            try {\n                return await super.signAndSendTransaction({ receiverId, actions });\n            }\n            catch (e) {\n                if (e.type === 'NotEnoughAllowance') {\n                    accessKey = await this.accessKeyForTransaction(receiverId, actions);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = borsh_1.baseDecode(block.header.hash);\n        const publicKey = utils_1.PublicKey.from(accessKey.public_key);\n        // TODO: Cache & listen for nonce updates for given access key\n        const nonce = accessKey.access_key.nonce + 1;\n        const transaction = transaction_1.createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n        await this.walletConnection.requestSignTransactions({\n            transactions: [transaction],\n            meta: walletMeta,\n            callbackUrl: walletCallbackUrl\n        });\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                reject(new Error('Failed to redirect to sign transaction'));\n            }, 1000);\n        });\n        // TODO: Aggregate multiple transaction request with \"debounce\".\n        // TODO: Introduce TrasactionQueue which also can be used to watch for status?\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    async accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        const { access_key: { permission } } = accessKey;\n        if (permission === 'FullAccess') {\n            return true;\n        }\n        if (permission.FunctionCall) {\n            const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n            /********************************\n            Accept multisig access keys and let wallets attempt to signAndSendTransaction\n            If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n            ********************************/\n            if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                return true;\n            }\n            if (allowedReceiverId === receiverId) {\n                if (actions.length !== 1) {\n                    return false;\n                }\n                const [{ functionCall }] = actions;\n                return functionCall &&\n                    (!functionCall.deposit || functionCall.deposit.toString() === '0') && // TODO: Should support charging amount smaller than allowance?\n                    (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                // TODO: Handle cases when allowance doesn't have enough to pay for gas\n            }\n        }\n        // TODO: Support other permissions than FunctionCall\n        return false;\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     * @returns Promise<any>\n     */\n    async accessKeyForTransaction(receiverId, actions, localKey) {\n        const accessKeys = await this.getAccessKeys();\n        if (localKey) {\n            const accessKey = accessKeys.find(key => key.public_key.toString() === localKey.toString());\n            if (accessKey && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        const walletKeys = this.walletConnection._authData.allKeys;\n        for (const accessKey of accessKeys) {\n            if (walletKeys.indexOf(accessKey.public_key) !== -1 && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        return null;\n    }\n}\nexports.ConnectedWalletAccount = ConnectedWalletAccount;\n","\"use strict\";\n/** @hidden @module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorContext = exports.TypedError = exports.getTransactionLastResult = exports.FinalExecutionStatusBasic = exports.JsonRpcProvider = exports.Provider = void 0;\nconst provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\nObject.defineProperty(exports, \"getTransactionLastResult\", { enumerable: true, get: function () { return provider_1.getTransactionLastResult; } });\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", { enumerable: true, get: function () { return provider_1.FinalExecutionStatusBasic; } });\nconst json_rpc_provider_1 = require(\"./json-rpc-provider\");\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } });\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return json_rpc_provider_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return json_rpc_provider_1.ErrorContext; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = new bn_js_1.default('10', 10).pow(new bn_js_1.default(exports.NEAR_NOMINATION_EXP, 10));\n// Pre-calculate offests used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = new bn_js_1.default(10);\nfor (let i = 0, offset = new bn_js_1.default(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset.mul(BN10)) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    const balanceBN = new bn_js_1.default(balance, 10);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN.iadd(ROUNDING_OFFSETS[roundingExp]);\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || '0';\n    const fractionStr = balance.substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, '0').substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split('.');\n    const wholePart = split[0];\n    const fracPart = split[1] || '';\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, '0'));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, '').trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, '');\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, '');\n    if (value === '') {\n        return '0';\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, '$1,$2');\n    }\n    return value;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst providers_1 = require(\"./providers\");\nconst signer_1 = require(\"./signer\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider({ ...config.args });\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signer_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer);\n    }\n}\nexports.Connection = Connection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Assignable = exports.Enum = void 0;\n/** @hidden @module */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexports.Enum = Enum;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserLocalStorageKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n        if (!value) {\n            return null;\n        }\n        return key_pair_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.KeyType = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst serialize_1 = require(\"./serialize\");\nconst enums_1 = require(\"./enums\");\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case KeyType.ED25519: return 'ed25519';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return KeyType.ED25519;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends enums_1.Assignable {\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new PublicKey({ keyType: KeyType.ED25519, data: serialize_1.base_decode(parts[0]) });\n        }\n        else if (parts.length === 2) {\n            return new PublicKey({ keyType: str_to_key_type(parts[0]), data: serialize_1.base_decode(parts[1]) });\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n    toString() {\n        return `${key_type_to_str(this.keyType)}:${serialize_1.base_encode(this.data)}`;\n    }\n    verify(message, signature) {\n        switch (this.keyType) {\n            case KeyType.ED25519: return tweetnacl_1.default.sign.detached.verify(message, signature, this.data);\n            default: throw new Error(`Unknown key type ${this.keyType}`);\n        }\n    }\n}\nexports.PublicKey = PublicKey;\nclass KeyPair {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return KeyPairEd25519.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new KeyPairEd25519(parts[0]);\n        }\n        else if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new KeyPairEd25519(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends KeyPair {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} secretKey\n     */\n    constructor(secretKey) {\n        super();\n        const keyPair = tweetnacl_1.default.sign.keyPair.fromSecretKey(serialize_1.base_decode(secretKey));\n        this.publicKey = new PublicKey({ keyType: KeyType.ED25519, data: keyPair.publicKey });\n        this.secretKey = secretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const newKeyPair = tweetnacl_1.default.sign.keyPair();\n        return new KeyPairEd25519(serialize_1.base_encode(newKeyPair.secretKey));\n    }\n    sign(message) {\n        const signature = tweetnacl_1.default.sign.detached(message, serialize_1.base_decode(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `ed25519:${this.secretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n","/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.keys[`${accountId}:${networkId}`];\n        if (!value) {\n            return null;\n        }\n        return key_pair_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        delete this.keys[`${accountId}:${networkId}`];\n    }\n    /**\n     * Removes all {@link KeyPairs} from in-memory storage\n     */\n    async clear() {\n        this.keys = {};\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            result.add(parts[1]);\n        });\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            if (parts[parts.length - 1] === networkId) {\n                result.push(parts.slice(0, parts.length - 1).join(':'));\n            }\n        });\n        return result;\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar borsh_1 = require(\"borsh\");\nObject.defineProperty(exports, \"base_encode\", { enumerable: true, get: function () { return borsh_1.baseEncode; } });\nObject.defineProperty(exports, \"base_decode\", { enumerable: true, get: function () { return borsh_1.baseDecode; } });\nObject.defineProperty(exports, \"serialize\", { enumerable: true, get: function () { return borsh_1.serialize; } });\nObject.defineProperty(exports, \"deserialize\", { enumerable: true, get: function () { return borsh_1.deserialize; } });\nObject.defineProperty(exports, \"BorshError\", { enumerable: true, get: function () { return borsh_1.BorshError; } });\nObject.defineProperty(exports, \"BinaryWriter\", { enumerable: true, get: function () { return borsh_1.BinaryWriter; } });\nObject.defineProperty(exports, \"BinaryReader\", { enumerable: true, get: function () { return borsh_1.BinaryReader; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchJson = void 0;\nconst http_errors_1 = __importDefault(require(\"http-errors\"));\nconst exponential_backoff_1 = __importDefault(require(\"./exponential-backoff\"));\nconst providers_1 = require(\"../providers\");\nconst errors_1 = require(\"./errors\");\nconst START_WAIT_TIME_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\nasync function fetchJson(connectionInfoOrUrl, json) {\n    let connectionInfo = { url: null };\n    if (typeof (connectionInfoOrUrl) === 'string') {\n        connectionInfo.url = connectionInfoOrUrl;\n    }\n    else {\n        connectionInfo = connectionInfoOrUrl;\n    }\n    const response = await exponential_backoff_1.default(START_WAIT_TIME_MS, RETRY_NUMBER, BACKOFF_MULTIPLIER, async () => {\n        try {\n            const response = await fetch(connectionInfo.url, {\n                method: json ? 'POST' : 'GET',\n                body: json ? json : undefined,\n                headers: { ...connectionInfo.headers, 'Content-Type': 'application/json' }\n            });\n            if (!response.ok) {\n                if (response.status === 503) {\n                    errors_1.logWarning(`Retrying HTTP request for ${connectionInfo.url} as it's not available now`);\n                    return null;\n                }\n                throw http_errors_1.default(response.status, await response.text());\n            }\n            return response;\n        }\n        catch (error) {\n            if (error.toString().includes('FetchError') || error.toString().includes('Failed to fetch')) {\n                errors_1.logWarning(`Retrying HTTP request for ${connectionInfo.url} because of error: ${error}`);\n                return null;\n            }\n            throw error;\n        }\n    });\n    if (!response) {\n        throw new providers_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${connectionInfo.url}.`, 'RetriesExceeded');\n    }\n    return await response.json();\n}\nexports.fetchJson = fetchJson;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logWarning = exports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\nfunction logWarning(...args) {\n    if (!process.env['NEAR_NO_LOGS']) {\n        console.warn(...args);\n    }\n}\nexports.logWarning = logWarning;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nasync function exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    // TODO: jitter?\n    let waitTime = startWaitTime;\n    for (let i = 0; i < retryNumber; i++) {\n        const result = await getResult();\n        if (result) {\n            return result;\n        }\n        await sleep(waitTime);\n        waitTime *= waitBackoff;\n    }\n    return null;\n}\nexports.default = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySigner = exports.Signer = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst in_memory_key_store_1 = require(\"./key_stores/in_memory_key_store\");\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static async fromKeyPair(networkId, accountId, keyPair) {\n        const keyStore = new in_memory_key_store_1.InMemoryKeyStore();\n        await keyStore.setKey(networkId, accountId, keyPair);\n        return new InMemorySigner(keyStore);\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    async createKey(accountId, networkId) {\n        const keyPair = key_pair_1.KeyPair.fromRandom('ed25519');\n        await this.keyStore.setKey(networkId, accountId, keyPair);\n        return keyPair.getPublicKey();\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    async getPublicKey(accountId, networkId) {\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            return null;\n        }\n        return keyPair.getPublicKey();\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    async signMessage(message, accountId, networkId) {\n        const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n        if (!accountId) {\n            throw new Error('InMemorySigner requires provided account id');\n        }\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            throw new Error(`Key for ${accountId} not found in ${networkId}`);\n        }\n        return keyPair.sign(hash);\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPain} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        await this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            const keyPair = await keyStore.getKey(networkId, accountId);\n            if (keyPair) {\n                return keyPair;\n            }\n        }\n        return null;\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            await keyStore.removeKey(networkId, accountId);\n        }\n    }\n    /**\n     * Removes all items from each key store\n     */\n    async clear() {\n        for (const keyStore of this.keyStores) {\n            await keyStore.clear();\n        }\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const network of await keyStore.getNetworks()) {\n                result.add(network);\n            }\n        }\n        return Array.from(result);\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const account of await keyStore.getAccounts(networkId)) {\n                result.add(account);\n            }\n        }\n        return Array.from(result);\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `config` argument is given here, then it should be an\n   * object with a `tags` attribute or an `escape` attribute or both.\n   * If an array is passed, then it will be interpreted the same way as\n   * a `tags` attribute on a `config` object.\n   *\n   * The `tags` attribute of a `config` object must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   *\n   * The `escape` attribute of a `config` object must be a function which\n   * accepts a string as input and outputs a safely escaped string.\n   * If an `escape` function is not provided, then an HTML-safe string\n   * escaping function is used as the default.\n   */\n  Writer.prototype.render = function render (template, view, partials, config) {\n    var tags = this.getConfigTags(config);\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, config);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context, config);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials, config);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate, config);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n    if (!partials) return;\n    var tags = this.getConfigTags(config);\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      var tokens = this.parse(indentedValue, tags);\n      return this.renderTokens(tokens, context, partials, indentedValue, config);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context, config) {\n    var escape = this.getConfigEscape(config) || mustache.escape;\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  Writer.prototype.getConfigTags = function getConfigTags (config) {\n    if (isArray(config)) {\n      return config;\n    }\n    else if (config && typeof config === 'object') {\n      return config.tags;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  Writer.prototype.getConfigEscape = function getConfigEscape (config) {\n    if (config && typeof config === 'object' && !isArray(config)) {\n      return config.escape;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.2.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view`, `partials`, and `config`\n   * using the default writer.\n   */\n  mustache.render = function render (template, view, partials, config) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, config);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnection = exports.WalletAccount = exports.ConnectedWalletAccount = exports.Near = exports.KeyPair = exports.Signer = exports.InMemorySigner = exports.Contract = exports.Connection = exports.Account = exports.multisig = exports.validators = exports.transactions = exports.utils = exports.providers = exports.accountCreator = void 0;\n/** @hidden @module */\nconst providers = __importStar(require(\"./providers\"));\nexports.providers = providers;\nconst utils = __importStar(require(\"./utils\"));\nexports.utils = utils;\nconst transactions = __importStar(require(\"./transaction\"));\nexports.transactions = transactions;\nconst validators = __importStar(require(\"./validators\"));\nexports.validators = validators;\nconst account_1 = require(\"./account\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return account_1.Account; } });\nconst multisig = __importStar(require(\"./account_multisig\"));\nexports.multisig = multisig;\nconst accountCreator = __importStar(require(\"./account_creator\"));\nexports.accountCreator = accountCreator;\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return connection_1.Connection; } });\nconst signer_1 = require(\"./signer\");\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signer_1.Signer; } });\nObject.defineProperty(exports, \"InMemorySigner\", { enumerable: true, get: function () { return signer_1.InMemorySigner; } });\nconst contract_1 = require(\"./contract\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\nconst key_pair_1 = require(\"./utils/key_pair\");\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nconst near_1 = require(\"./near\");\nObject.defineProperty(exports, \"Near\", { enumerable: true, get: function () { return near_1.Near; } });\n// TODO: Deprecate and remove WalletAccount\nconst wallet_account_1 = require(\"./wallet-account\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", { enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } });\nObject.defineProperty(exports, \"WalletAccount\", { enumerable: true, get: function () { return wallet_account_1.WalletAccount; } });\nObject.defineProperty(exports, \"WalletConnection\", { enumerable: true, get: function () { return wallet_account_1.WalletConnection; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst web_1 = require(\"./utils/web\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await web_1.fetchJson(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logWarning = exports.rpc_errors = exports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.format = exports.enums = exports.web = exports.serialize = exports.key_pair = void 0;\nconst key_pair = __importStar(require(\"./key_pair\"));\nexports.key_pair = key_pair;\nconst serialize = __importStar(require(\"./serialize\"));\nexports.serialize = serialize;\nconst web = __importStar(require(\"./web\"));\nexports.web = web;\nconst enums = __importStar(require(\"./enums\"));\nexports.enums = enums;\nconst format = __importStar(require(\"./format\"));\nexports.format = format;\nconst rpc_errors = __importStar(require(\"./rpc_errors\"));\nexports.rpc_errors = rpc_errors;\nconst key_pair_1 = require(\"./key_pair\");\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return key_pair_1.PublicKey; } });\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nObject.defineProperty(exports, \"KeyPairEd25519\", { enumerable: true, get: function () { return key_pair_1.KeyPairEd25519; } });\nconst errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return errors_1.logWarning; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.ErrorContext = exports.TypedError = void 0;\n/**\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the NEAR RPC API.\n * @see {@link providers/provider} for a list of request and response types\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return errors_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return errors_1.ErrorContext; } });\nconst borsh_1 = require(\"borsh\");\nconst exponential_backoff_1 = __importDefault(require(\"../utils/exponential-backoff\"));\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the NEAR RPC API.\n * @see {@link https://github.com/near/nearcore/tree/master/chain/jsonrpc}\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param connectionInfoOrUrl ConnectionInfo or RPC API endpoint URL (deprecated)\n     */\n    constructor(connectionInfoOrUrl) {\n        super();\n        if (connectionInfoOrUrl != null && typeof connectionInfoOrUrl == 'object') {\n            this.connection = connectionInfoOrUrl;\n        }\n        else {\n            const deprecate = depd_1.default('JsonRpcProvider(url?: string)');\n            deprecate('use `JsonRpcProvider(connectionInfo: ConnectionInfo)` instead');\n            this.connection = { url: connectionInfoOrUrl };\n        }\n    }\n    /**\n     * Gets the RPC's status\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#general-validator-status}\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await}\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_async', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#transaction-status}\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    async txStatus(txHash, accountId) {\n        if (typeof txHash === 'string') {\n            return this.txStatusString(txHash, accountId);\n        }\n        else {\n            return this.txStatusUint8Array(txHash, accountId);\n        }\n    }\n    async txStatusUint8Array(txHash, accountId) {\n        return this.sendJsonRpc('tx', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    async txStatusString(txHash, accountId) {\n        return this.sendJsonRpc('tx', [txHash, accountId]);\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId) {\n        return this.sendJsonRpc('EXPERIMENTAL_tx_status', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts)\n     * Query the RPC by passing an {@link RpcQueryRequest}\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts}\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    async query(...args) {\n        let result;\n        if (args.length === 1) {\n            result = await this.sendJsonRpc('query', args[0]);\n        }\n        else {\n            const [path, data] = args;\n            result = await this.sendJsonRpc('query', [path, data]);\n        }\n        if (result && result.error) {\n            throw new errors_1.TypedError(`Querying ${args} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, rpc_errors_1.getErrorTypeFromErrorMessage(result.error));\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see {@link https://docs.near.org/docs/interaction/rpc#block}\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        let { blockId } = blockQuery;\n        if (typeof blockQuery !== 'object') {\n            const deprecate = depd_1.default('JsonRpcProvider.block(blockId)');\n            deprecate('use `block({ blockId })` or `block({ finality })` instead');\n            blockId = blockQuery;\n        }\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#block-details)\n     */\n    async blockChanges(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see {@link https://docs.near.org/docs/interaction/rpc#chunk}\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#detailed-validator-status}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * @deprecated\n     * Gets the genesis config from RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#genesis-config}\n     */\n    async experimental_genesisConfig() {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_protocolConfig()');\n        deprecate('use `experimental_protocolConfig({ sync_checkpoint: \\'genesis\\' })` to fetch the up-to-date or genesis protocol config explicitly');\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', { sync_checkpoint: 'genesis' });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     * @see {@link }\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', blockReference);\n    }\n    /**\n     * @deprecated Use {@link lightClientProof} instead\n     */\n    async experimental_lightClientProof(request) {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');\n        deprecate('use `lightClientProof` instead');\n        return await this.lightClientProof(request);\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see {@link https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof}\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'all_access_key_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'single_access_key_changes',\n            keys: accessKeyArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'account_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'data_changes',\n            account_ids: accountIdArray,\n            key_prefix_base64: keyPrefix,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'contract_code_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#gas-price}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return await this.sendJsonRpc('gas_price', [blockId]);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const response = await exponential_backoff_1.default(REQUEST_RETRY_WAIT, REQUEST_RETRY_NUMBER, REQUEST_RETRY_WAIT_BACKOFF, async () => {\n            try {\n                const request = {\n                    method,\n                    params,\n                    id: (_nextId++),\n                    jsonrpc: '2.0'\n                };\n                const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n                if (response.error) {\n                    if (typeof response.error.data === 'object') {\n                        if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                            throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                        }\n                        throw rpc_errors_1.parseRpcError(response.error.data);\n                    }\n                    else {\n                        const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                        // NOTE: All this hackery is happening because structured errors not implemented\n                        // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                        if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                            || errorMessage.includes('query has timed out')) {\n                            throw new errors_1.TypedError(errorMessage, 'TimeoutError');\n                        }\n                        throw new errors_1.TypedError(errorMessage, rpc_errors_1.getErrorTypeFromErrorMessage(response.error.data));\n                    }\n                }\n                // Success when response.error is not exist\n                return response;\n            }\n            catch (error) {\n                if (error.type === 'TimeoutError') {\n                    if (!process.env['NEAR_NO_LOGS']) {\n                        console.warn(`Retrying request to ${method} as it has timed out`, params);\n                    }\n                    return null;\n                }\n                throw error;\n            }\n        });\n        const { result } = response;\n        // From jsonrpc spec:\n        // result\n        //   This member is REQUIRED on success.\n        //   This member MUST NOT exist if there was an error invoking the method.\n        if (typeof result === 'undefined') {\n            throw new errors_1.TypedError(`Exceeded ${REQUEST_RETRY_NUMBER} attempts for request to ${method}.`, 'RetriesExceeded');\n        }\n        return result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Action = exports.SignedTransaction = exports.Transaction = exports.Signature = exports.deleteAccount = exports.deleteKey = exports.addKey = exports.stake = exports.transfer = exports.functionCall = exports.stringifyJsonOrBytes = exports.deployContract = exports.createAccount = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.functionCallAccessKey = exports.fullAccessKey = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst enums_1 = require(\"./utils/enums\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nclass FunctionCallPermission extends enums_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends enums_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends enums_1.Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends enums_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nfunction fullAccessKey() {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ fullAccess: new FullAccessPermission({}) }) });\n}\nexports.fullAccessKey = fullAccessKey;\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ functionCall: new FunctionCallPermission({ receiverId, allowance, methodNames }) }) });\n}\nexports.functionCallAccessKey = functionCallAccessKey;\nclass IAction extends enums_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nfunction createAccount() {\n    return new Action({ createAccount: new CreateAccount({}) });\n}\nexports.createAccount = createAccount;\nfunction deployContract(code) {\n    return new Action({ deployContract: new DeployContract({ code }) });\n}\nexports.deployContract = deployContract;\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    const serializedArgs = isUint8Array ? args : Buffer.from(JSON.stringify(args));\n    return serializedArgs;\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n */\nfunction functionCall(methodName, args, gas, deposit, stringify = stringifyJsonOrBytes) {\n    return new Action({ functionCall: new FunctionCall({ methodName, args: stringify(args), gas, deposit }) });\n}\nexports.functionCall = functionCall;\nfunction transfer(deposit) {\n    return new Action({ transfer: new Transfer({ deposit }) });\n}\nexports.transfer = transfer;\nfunction stake(stake, publicKey) {\n    return new Action({ stake: new Stake({ stake, publicKey }) });\n}\nexports.stake = stake;\nfunction addKey(publicKey, accessKey) {\n    return new Action({ addKey: new AddKey({ publicKey, accessKey }) });\n}\nexports.addKey = addKey;\nfunction deleteKey(publicKey) {\n    return new Action({ deleteKey: new DeleteKey({ publicKey }) });\n}\nexports.deleteKey = deleteKey;\nfunction deleteAccount(beneficiaryId) {\n    return new Action({ deleteAccount: new DeleteAccount({ beneficiaryId }) });\n}\nexports.deleteAccount = deleteAccount;\nclass Signature extends enums_1.Assignable {\n}\nexports.Signature = Signature;\nclass Transaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, Transaction, bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, SignedTransaction, bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends enums_1.Enum {\n}\nexports.Action = Action;\nexports.SCHEMA = new Map([\n    [Signature, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [64]]\n            ] }],\n    [SignedTransaction, { kind: 'struct', fields: [\n                ['transaction', Transaction],\n                ['signature', Signature]\n            ] }],\n    [Transaction, { kind: 'struct', fields: [\n                ['signerId', 'string'],\n                ['publicKey', key_pair_1.PublicKey],\n                ['nonce', 'u64'],\n                ['receiverId', 'string'],\n                ['blockHash', [32]],\n                ['actions', [Action]]\n            ] }],\n    [key_pair_1.PublicKey, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [32]]\n            ] }],\n    [AccessKey, { kind: 'struct', fields: [\n                ['nonce', 'u64'],\n                ['permission', AccessKeyPermission],\n            ] }],\n    [AccessKeyPermission, { kind: 'enum', field: 'enum', values: [\n                ['functionCall', FunctionCallPermission],\n                ['fullAccess', FullAccessPermission],\n            ] }],\n    [FunctionCallPermission, { kind: 'struct', fields: [\n                ['allowance', { kind: 'option', type: 'u128' }],\n                ['receiverId', 'string'],\n                ['methodNames', ['string']],\n            ] }],\n    [FullAccessPermission, { kind: 'struct', fields: [] }],\n    [Action, { kind: 'enum', field: 'enum', values: [\n                ['createAccount', CreateAccount],\n                ['deployContract', DeployContract],\n                ['functionCall', FunctionCall],\n                ['transfer', Transfer],\n                ['stake', Stake],\n                ['addKey', AddKey],\n                ['deleteKey', DeleteKey],\n                ['deleteAccount', DeleteAccount],\n            ] }],\n    [CreateAccount, { kind: 'struct', fields: [] }],\n    [DeployContract, { kind: 'struct', fields: [\n                ['code', ['u8']]\n            ] }],\n    [FunctionCall, { kind: 'struct', fields: [\n                ['methodName', 'string'],\n                ['args', ['u8']],\n                ['gas', 'u64'],\n                ['deposit', 'u128']\n            ] }],\n    [Transfer, { kind: 'struct', fields: [\n                ['deposit', 'u128']\n            ] }],\n    [Stake, { kind: 'struct', fields: [\n                ['stake', 'u128'],\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [AddKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey],\n                ['accessKey', AccessKey]\n            ] }],\n    [DeleteKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [DeleteAccount, { kind: 'struct', fields: [\n                ['beneficiaryId', 'string']\n            ] }],\n]);\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    return new Transaction({ signerId, publicKey, nonce, receiverId, actions, blockHash });\n}\nexports.createTransaction = createTransaction;\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n    const message = borsh_1.serialize(exports.SCHEMA, transaction);\n    const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n    const signature = await signer.signMessage(message, accountId, networkId);\n    const signedTx = new SignedTransaction({\n        transaction,\n        signature: new Signature({ keyType: transaction.publicKey.keyType, data: signature.signature })\n    });\n    return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n    if (args[0].constructor === Transaction) {\n        const [transaction, signer, accountId, networkId] = args;\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n    else {\n        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n        const publicKey = await signer.getPublicKey(accountId, networkId);\n        const transaction = createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n}\nexports.signTransaction = signTransaction;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = new bn_js_1.default('30000000000000');\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst mustache_1 = __importDefault(require(\"mustache\"));\nconst rpc_error_schema_json_1 = __importDefault(require(\"../generated/rpc_error_schema.json\"));\nconst error_messages_json_1 = __importDefault(require(\"../res/error_messages.json\"));\nconst common_index_1 = require(\"../common-index\");\nconst errors_1 = require(\"../utils/errors\");\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => common_index_1.utils.format.formatNearAmount(render(n))\n};\nclass ServerError extends errors_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], {\n            ...errorData,\n            ...mustacheHelpers\n        });\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return 'UntypedError';\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                })\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (...args) => {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod({ methodName, ...args[0] });\n                })\n            });\n        });\n    }\n    async _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        validateBNLike({ gas, amount });\n        const rawResult = await this.account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl\n        });\n        return providers_1.getTransactionLastResult(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = exports.BrowserLocalStorageKeyStore = exports.InMemoryKeyStore = exports.KeyStore = void 0;\n/** @hidden @module */\nconst keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"KeyStore\", { enumerable: true, get: function () { return keystore_1.KeyStore; } });\nconst in_memory_key_store_1 = require(\"./in_memory_key_store\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", { enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } });\nconst browser_local_storage_key_store_1 = require(\"./browser_local_storage_key_store\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", { enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } });\nconst merge_key_store_1 = require(\"./merge_key_store\");\nObject.defineProperty(exports, \"MergeKeyStore\", { enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } });\n","\"use strict\";\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransactionLastResult = exports.Provider = exports.IdType = exports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden @module */\nexports.keyStores = __importStar(require(\"./key_stores/browser-index\"));\n__exportStar(require(\"./common-index\"), exports);\n__exportStar(require(\"./browser-connect\"), exports);\nrequire(\"error-polyfill\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connect = void 0;\n/**\n * Connect to NEAR using the provided configuration.\n *\n * {@link ConnectConfig.networkId} and {@link ConnectConfig.nodeUrl} are required.\n *\n * To sign transactions you can also pass: {@link ConnectConfig.keyStore}\n *\n * Both are passed they are prioritize in that order.\n *\n * @see {@link ConnectConfig}\n * @example\n * ```js\n * async function initNear() {\n *   const near = await connect({\n *      networkId: 'testnet',\n *      nodeUrl: 'https://rpc.testnet.near.org'\n *   })\n * }\n * ```\n *\n * @module browserConnect\n */\nconst near_1 = require(\"./near\");\n/**\n * Initialize connection to Near network.\n */\nasync function connect(config) {\n    return new near_1.Near(config);\n}\nexports.connect = connect;\n","'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params maxNumberOfSeats: maximum number of seats in the network.\n * @params minimumStakeRatio: minimum stake ratio\n * @params protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = depd_1.default('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // harcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new bn_js_1.default(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new bn_js_1.default(1), right = stakesSum.add(new bn_js_1.default(1));\n    while (!left.eq(right.sub(new bn_js_1.default(1)))) {\n        const mid = left.add(right).div(new bn_js_1.default(2));\n        let found = false;\n        let currentSum = new bn_js_1.default(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum.mul(new bn_js_1.default(minimumStakeRatio[0])).div(new bn_js_1.default(minimumStakeRatio[1]));\n    }\n    else {\n        return stakes[0].add(new bn_js_1.default(1));\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = connection_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n            this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new account_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new account_1.Account(this.connection, accountId);\n    }\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n    async loadContract(contractId, options) {\n        const account = new account_1.Account(this.connection, options.sender);\n        return new contract_1.Contract(account, contractId, options);\n    }\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    async sendTokens(amount, originator, receiver) {\n        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n        const account = new account_1.Account(this.connection, originator);\n        const result = await account.sendMoney(receiver, amount);\n        return result.transaction_outcome.id;\n    }\n}\nexports.Near = Near;\n"],"sourceRoot":""}