{"version":3,"sources":["webpack:///./node_modules/bs58/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///./node_modules/base-x/src/index.js","webpack:///./node_modules/borsh/lib/index.js"],"names":["basex","ALPHABET","module","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","red","_init","Buffer","wordSize","window","e","parseHex4Bits","string","index","c","parseHexByte","lowerBound","r","parseBase","str","mul","b","Math","min","move","dest","src","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","parseLength","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","toBitArray","bitLength","bit","wbit","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u","_Buffer","TypeError","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","log","iFACTOR","encode","source","from","isBuffer","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","alloc","psz","b256","it3","it4","vch","fill","decode","buffer","__createBinding","Object","create","k2","defineProperty","enumerable","get","__setModuleDefault","v","value","__decorate","decorators","target","key","desc","d","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","result","hasOwnProperty","__importDefault","deserializeUnchecked","deserialize","serialize","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","encoding","TextDecoder","global","textDecoder","fatal","default","INITIAL_LENGTH","message","super","fieldPath","originalMessage","fieldName","splice","buf","concat","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","subarray","writeU32","array","fn","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","apply","RangeError","offset","readUInt8","readUInt16LE","readUInt32LE","readBuffer","slice","readU32","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","writeFixedArray","writeArray","item","kind","writeU8","type","serializeStruct","error","addToFieldPath","obj","borshSerialize","structSchema","fields","map","field","idx","values","Writer","deserializeField","reader","readFixedArray","readArray","option","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Reader"],"mappings":"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","file":"js/chunk-vendors~62ab6885.504a7ef4.js","sourcesContent":["var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === 'number') {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === 'function') {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === 'number') {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === 'function') {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n"],"sourceRoot":""}